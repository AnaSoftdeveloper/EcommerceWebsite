@model ProductVM;

<form method="post" enctype="multipart/form-data">
    <input asp-for="Product.Id" hidden />
    <div class="border p-3 mt-4">
        <div class="row pb-2">
          <h2 class="text-primary">@(Model.Product.Id!=0? "Update ":"Create") Product</h2>
          <hr />
        </div>
        <div asp-validation-summary="All">
@*         <div asp-validation-summary="ModelOnly"> *@
            </div>
        <div class="mb-3 row p-1">
            <label class="p-0">Title</label>
            <input asp-for="Product.Title"class="form-control" />
            <span asp-validation-for="Product.Title" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label class="p-0">ISBN</label>
            <input asp-for="Product.ISBN" class="form-control" />
            <span asp-validation-for="Product.ISBN" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label class="p-0">Author</label>
            <input asp-for="Product.Author" class="form-control" />
            <span asp-validation-for="Product.Author" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label class="p-0 text-muted">Descriptione</label>
            <textarea asp-for="Product.Description" class="form-control"></textarea>
            <span asp-validation-for="Product.Description" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label class="p-0">ListPrice</label>
            <input asp-for="Product.ListPrice" class="form-control" />
            <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label class="p-0">Price</label>
            <input asp-for="Product.Price" class="form-control" />
            <span asp-validation-for="Product.Price" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label class="p-0">Price for 1-50</label>
            <input asp-for="Product.Price50" class="form-control" />
            <span asp-validation-for="Product.Price50" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label class="p-0">Price for 50+</label>
            <input asp-for="Product.Price50" class="form-control" />
            <span asp-validation-for="Product.Price50" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label class="p-0">Price for 100</label>
            <input asp-for="Product.Price100" class="form-control" />
            <span asp-validation-for="Product.Price100" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
                    <label class="p-0">CategoryId</label>    
            <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select">
                <option disabled selected>--Select Category--</option>
            </select>   
            <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
        </div>

        <div class="mb-3 row p-1">
            <label class="p-0" asp-for="Product.ImageUrl"></label>
            <input type="file" name="file" class="form-control" />
        </div>
        
        <div class="row">
            <div class="col-6 col-md-3">
                @if(Model.Product.Id !=0){
                    <button type="submit" class="btn btn-primary form-control">Update</button>
                }
                else
                {
                    <button type="submit" class="btn btn-primary form-control">Create</button>
                }
            </div>
            <div class="col-6 col-md-3">
                <a asp-controller="Category" asp-action="Index" class="btn btn-outline-secondary form-control">Back to List</a>
            </div>
        </div>
    </div>
</form>
@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
        <script>
            tinymce.init({
                selector: 'textarea',
                plugins: 'anchor autolink charmap codesample emoticons lists table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
                toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap',
                tinycomments_mode: 'embedded',
                tinycomments_author: 'Author name',
                mergetags_list: [
                    { value: 'First.Name', title: 'First Name' },
                    { value: 'Email', title: 'Email' },
                ],
                ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
            });
        </script>
    }

}